- name: update server and install nginx
  ansible.builtin.apt:
    update_cache: yes
    name: nginx
    # state: present
  tags:
    - nginix-install

- name: Remove nginix default conf
  ansible.builtin.file:
    path: /etc/nginx/sites-enabled/default
    state: absent
  notify: restart-nginx
  tags:
    - nginix-install

- name: Create directory if they don't exist
  ansible.builtin.file:
    path: "{{ item.folder }}"
    state: directory
    owner: root
    group: root
  loop: "{{ app_nginx_configurations }}"

#- name: Copy nginx site configurations
#  ansible.builtin.copy:
#    src: nginx.conf
#    dest: /etc/nginx/conf.d/test.conf
#    owner: root
#    group: root
#  notify: restart-nginx

- name: Create index.html conf
  ansible.builtin.copy:
    src: "{{ item.app }}/index.html"
    dest: "{{ item.folder }}/index.html"
    owner: root
    group: root
  loop: "{{ app_nginx_configurations }}"

- name: Copy site configurations
  ansible.builtin.template:
    src: "app-nginx-template.conf.j2"
    dest: "/etc/nginx/conf.d/{{ item.domain }}.conf"
  notify: restart-nginx
  loop: "{{ app_nginx_configurations }}"
# ------ Task that copies file from local files/ folder  to remote host with content   -----------
#- name: Copy site configurations
#  ansible.builtin.copy:
#    src: "{{ item }}/index.html"
#    dest: "/var/www/{{ item }}/index.html"
#    owner: root
#    group: root
#  loop: "{{ apps }}"
# Zadatak:
# ansibletest.com/service1 -> /opt/service1/index.html
# ansibletest.com/applicatio1 -> /opt/aplication1/index.html
# ansibletest.com/application2 -> /var/application2/index.html

# teme za istrazivanje "dict", "list" i "list of dicts"
